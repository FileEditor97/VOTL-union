# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Publish Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3.5.3
    - name: Set up JDK 17
      uses: actions/setup-java@v3.12.0
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Gradle Wrapper Validation
      # You may pin to the exact commit or the version.
      uses: gradle/wrapper-validation-action@v1.1.0
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2.7.0
      with:
        arguments: build
    - name: Get App Version
      id: get_version
      run: echo "version=$(./gradlew getReleaseVersion --console=plain -q --warning-mode=none)" >> $GITHUB_ENV
    - uses: actions/upload-artifact@v3.1.2
      with:
        name: Package
        path: |
          ./build/lib/VOTL-*
    - name: Create Release
      # You may pin to the exact commit or the version.
      uses: ncipollo/release-action@v1.12.0
      with:
        allowUpdates: true
        # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
        artifacts: ./build/lib/VOTL-*.jar
        artifactContentType: "raw"
        # Generate release notes. There needs to be a previous version for it to diff against.
        generateReleaseNotes: true
        # Optionally marks this release as prerelease. Set to true to enable.
        prerelease: (contains( ${{ env.version }} , 'SNAPSHOT'))
        # Indicates if existing release artifacts should be replaced. Defaults to true.
        replacesArtifacts: true
        # An optional tag for the release. If this is omitted the git ref will be used (if it is a tag).
        tag: ${{ env.version }}
        # The Github token.
        token: ${{ secrets.TOKEN }}
